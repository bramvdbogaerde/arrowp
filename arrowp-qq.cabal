Name:           arrowp-qq
Version:        0.3.0
Cabal-Version:  >= 1.20
Build-Type:     Simple
License:        GPL
License-File:   LICENCE
Author:         Jose Iborra <pepeiborra@gmail.com>
Maintainer:     John 'Ski <N/A>
Homepage:       https://github.com/pepeiborra/arrowp
Category:       Development
Synopsis:       A preprocessor and quasiquoter for translating arrow notation
Description:    A suite of preprocessor and quasiquoter to desugar arrow notation built on top of Ross Paterson's arrowp and the venerable haskell-src-exts.
Extra-Source-Files: README.md

Flag TestExamples
  Description:         Build the examples using the preprocessor and quasiquoter
  Default: False
  Manual: True               

Source-Repository head
    Type: git 
    Location: http://github.com/pepeiborra/arrowp

Library
    Exposed-Modules:     
                         Control.Arrow.Notation,
                         Control.Arrow.QuasiQuoter
    Build-Depends: base < 5,
                   containers,
                   data-default,
                   haskell-src-exts,
                   haskell-src-exts-util >= 0.2.0,
                   haskell-src-meta,
                   template-haskell, 
                   transformers,
                   uniplate

    Hs-Source-Dirs: src
    Other-Modules:  ArrCode ArrSyn NewCode SrcLocs Utils
    Default-Language:    Haskell2010

executable arrowp
  buildable: True
  main-is: Main.hs
  hs-source-dirs:
      app
  build-depends:
                base >= 4.7 && < 5, 
                arrowp-qq,
                haskell-src-exts

  default-language: Haskell2010

test-suite examples
  if flag(TestExamples)
     buildable: True
  else
     buildable:  False
  type:                exitcode-stdio-1.0
  hs-source-dirs:
                 examples,
                 examples/cgi,
                 examples/circuits,
                 examples/parser,
                 examples/powertrees,
                 examples/small
  main-is:             Main.hs
  other-modules:       
                       Parser,
                       ExprParser,
                       BackstateArrow,
                       Conditional,
                       ListOps,
                       Egs,
                       Eval,
                       Eval1,
                       GHC, 
                       Lift,
                       Static,
                       TH.TH,
                       TH.While,
                       TH.BackstateArrow
  build-depends:
    base, arrows, arrowp-qq, template-haskell
